{"version":3,"sources":["webpack:///./static/images/cover.png","webpack:///./src/pages/resume.js"],"names":["module","exports","InfoSection","title","children","css","ListItem","icon","skill","ColorsAdvanced","main","src","alt","ResumePage","render","styles","variables","font","defaultTitle","meta","name","content","lang","query","site","siteMetadata","person","social","skills","experience","className","CoverImg","first","last","position","location","phone","email","website","map","item","usernameSplits","url","split","username","length","service","languages","proficiency","proProfile","company","duration","description","desc","responsibilities","resp","Component"],"mappings":"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","file":"component---src-pages-resume-js-46002ea5317f3b04a6a2.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/cover-5c7d3ac48c41b52ef99381f6a0a3792a.png\";","/** @jsx jsx */\n\nimport { Component } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Global, css, jsx } from '@emotion/core'\n\nimport { ColorsAdvanced } from '../styles/main'\n\nimport CoverImg from '../../static/images/cover.png'\n\nimport * as variables from '../styles/variables.json'\n\nconst InfoSection = ({ title, children }) => (\n  <div\n    css={css`\n      padding: 3rem;\n    `}>\n    <div\n      css={css`\n        text-transform: uppercase;\n        letter-spacing: 0.3rem;\n        font-size: 1.2rem;\n        opacity: 0.6;\n        margin-bottom: 2.5rem;\n      `}>\n      {title}\n    </div>\n    {children}\n  </div>\n)\n\nconst ListItem = ({ icon, title, skill, children }) =>\n  skill ? (\n    <div\n      css={css`\n        background-color: ${ColorsAdvanced.main};\n        color: #fff;\n        display: inline-block;\n        padding: 0.2rem 0.5rem;\n        margin: 0.1rem;\n        font-size: 1rem;\n        border-radius: 0.2rem;\n      `}>\n      {children}\n    </div>\n  ) : (\n    <div\n      css={css`\n        margin-bottom: 1.5rem;\n        &:last-child {\n          margin-bottom: 0;\n        }\n      `}>\n      {title ? (\n        <div\n          css={css`\n            text-transform: uppercase;\n            margin-bottom: 0.2rem;\n            font-weight: bold;\n            color: ${ColorsAdvanced.main};\n          `}>\n          {title}\n        </div>\n      ) : (\n        ''\n      )}\n      {icon ? (\n        <img\n          css={css`\n            display: inline-block;\n            margin-right: 1rem;\n            width: 1.7rem;\n            position: relative;\n            top: -0.1rem;\n            margin-left: -0.1rem;\n            filter: invert(1);\n            opacity: 0.7;\n          `}\n          src={icon}\n          alt=\"Social Icon\"\n        />\n      ) : (\n        ''\n      )}\n      {children}\n    </div>\n  )\n\nexport default class ResumePage extends Component {\n  render = () => {\n    return (\n      <div>\n        <Global\n          styles={css`\n            body,\n            html {\n              font-family: ${variables.default.font}, sans-serif;\n              font-size: 16px;\n              background-color: #dcdcdc;\n            }\n            p {\n              line-height: 1.7;\n              text-align: justify;\n              &:first-child {\n                margin-top: -0.1rem;\n              }\n              &:last-child {\n                margin-bottom: 0;\n              }\n            }\n          `}\n        />\n        <Helmet\n          defaultTitle={'Resume - Guilherme Toti'}\n          meta={[\n            {\n              name: 'robots',\n              content: 'noindex',\n            },\n          ]}>\n          <html lang=\"en\" />\n        </Helmet>\n        <StaticQuery\n          query={graphql`\n            query {\n              site {\n                siteMetadata {\n                  social {\n                    icon\n                    service\n                    url\n                  }\n                  skills\n                  experience {\n                    company\n                    description\n                    duration\n                    location\n                    position\n                    responsibilities\n                  }\n                  person {\n                    email\n                    languages {\n                      name\n                      proficiency\n                    }\n                    location\n                    phone\n                    position\n                    proProfile\n                    website\n                    name {\n                      first\n                      last\n                    }\n                  }\n                }\n              }\n            }\n          `}\n          render={({ site }) => {\n            const { person, social, skills, experience } = site.siteMetadata\n            return (\n              <div\n                css={css`\n                  @media (max-width: 1200px) {\n                    width: 100%;\n                    max-width: 100%;\n                    padding: 0;\n                  }\n                `}\n                className=\"container\">\n                <div\n                  css={css`\n                    background-color: #fff;\n                  `}>\n                  <header\n                    css={css`\n                      background-image: url(${CoverImg});\n                      background-attachment: fixed;\n                      background-size: cover;\n                      background-position: center;\n                      background-color: ${ColorsAdvanced.main};\n                      padding: 5rem 3rem 3rem;\n                      color: #fff;\n                    `}>\n                    <div\n                      css={css`\n                        text-transform: uppercase;\n                        font-size: 3rem;\n                      `}>\n                      <strong>{person.name.first}</strong> {person.name.last}\n                    </div>\n                    <div\n                      css={css`\n                        text-transform: uppercase;\n                        letter-spacing: 0.1rem;\n                        margin-left: 0.2rem;\n                      `}>\n                      {person.position}\n                    </div>\n                  </header>\n                  <div className=\"row no-gutters\">\n                    <div\n                      className=\"col-md-4\"\n                      css={css`\n                        background-color: #ececec;\n                      `}>\n                      <InfoSection title=\"Contact\">\n                        <ListItem title=\"Location\">{person.location}</ListItem>\n                        <ListItem title=\"Phone\">{person.phone}</ListItem>\n                        <ListItem title=\"Email\">{person.email}</ListItem>\n                        <ListItem title=\"Website\">{person.website}</ListItem>\n                      </InfoSection>\n                      <InfoSection title=\"Social\">\n                        {social.map((item) => {\n                          const usernameSplits = item.url.split('/')\n                          const username =\n                            usernameSplits[usernameSplits.length - 1]\n                          return (\n                            <ListItem icon={`/images/icons/${item.icon}.png`}>\n                              {`${item.service} @${username}`}\n                            </ListItem>\n                          )\n                        })}\n                      </InfoSection>\n                      <InfoSection title=\"Skills\">\n                        <div\n                          css={css`\n                            margin: -0.1rem;\n                            display: inline-block;\n                          `}>\n                          {skills.map((item) => (\n                            <ListItem skill>{item}</ListItem>\n                          ))}\n                        </div>\n                      </InfoSection>\n                      <InfoSection title=\"Education\">\n                        <ListItem title=\"Self-Taught\">\n                          <div>\n                            I joined Computer Science degree 4 times but I\n                            always had to pause it because of work.\n                            <br />\n                            So, everything I learnt was from courses, articles\n                            and practicing.\n                          </div>\n                        </ListItem>\n                      </InfoSection>\n                      <InfoSection title=\"Languages\">\n                        {person.languages.map((item) => (\n                          <ListItem title={item.name}>\n                            {item.proficiency}\n                          </ListItem>\n                        ))}\n                      </InfoSection>\n                    </div>\n                    <div className=\"col-md-8\">\n                      <InfoSection title=\"Professional Profile\">\n                        {person.proProfile.map((item) => (\n                          <p>{item}</p>\n                        ))}\n                      </InfoSection>\n                      <InfoSection title=\"Employment History\">\n                        {experience.map((item) => (\n                          <div\n                            css={css`\n                              margin-bottom: 4rem;\n                              &:last-child {\n                                margin-bottom: 0;\n                              }\n                            `}>\n                            <div\n                              css={css`\n                                margin-bottom: 0.3rem;\n                              `}>\n                              <span\n                                css={css`\n                                  font-weight: bold;\n                                  font-size: 1.1rem;\n                                  color: ${ColorsAdvanced.main};\n                                `}>\n                                {item.company ? `${item.company} - ` : ''}\n                                {item.position}\n                              </span>\n                              <span className=\"float-right text-muted\">\n                                {item.duration}\n                              </span>\n                            </div>\n                            <div\n                              css={css`\n                                margin-bottom: 1.5rem;\n                              `}\n                              className=\"text-muted\">\n                              {item.location}\n                            </div>\n                            <div>\n                              {item.description.map((desc) => (\n                                <p>{desc}</p>\n                              ))}\n                            </div>\n                            {item.responsibilities.length ? (\n                              <div\n                                css={css`\n                                  margin-top: 1.5rem;\n                                `}>\n                                <div\n                                  className=\"text-muted\"\n                                  css={css`\n                                    margin-bottom: 1rem;\n                                  `}>\n                                  My Responsibilities\n                                </div>\n                                <ul\n                                  css={css`\n                                    margin-bottom: 0;\n                                    padding-left: 1.2rem;\n                                    li {\n                                      margin-bottom: 0.5rem;\n                                    }\n                                  `}>\n                                  {item.responsibilities.map((resp) => (\n                                    <li>{resp}</li>\n                                  ))}\n                                </ul>\n                              </div>\n                            ) : (\n                              ''\n                            )}\n                          </div>\n                        ))}\n                      </InfoSection>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          }}\n        />\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}